Strategy_1_2 did not work, mutexes were not enough for synch.

Found an idea:

put the array inside a Box and use two channels to sychronize access on it.

thread A waits to get the Box from B before writing on the array.
thread B waits to get the Box from A before reading the array.

Going to create another branch for this.

-----------------------------
Am implementat strategia, dupa ce am facut si transmiterea de la Secondary
catre microVM, am facut un deadlock.

Trebuie sa ma gandesc la un mod de a scapa de deadlock.
Am pus recv_timeout(5) momentan si se vede unde raman threadurile
pt ca iese cu panic.

-----------------------
Am reparat deadlock, performantele sunt cam la fel.

TODO:

vezi de ce atunci cand dai cu udp de la microVM spre host, tot se intampla asta:
2021-05-20T22:41:31.484192536 [anonymous-instance:-] rte_ring_enqueue failed, trying again.

Verifica daca atunci cand primeste pachete de la host catre VM, mbuf-urile folosesc
campul ala de next. Pt ca diferenta de throughput e mare intre cele doua directii.

-------------------------------

Am reparar rte_ring_enqueue failed, marind rig_size-ul din primary.
Am imbunatatit f putin throughputul prin modificari in primary:
rte_ring_size = 2048
RX_RING_SIZE 2048
TX_RING_SIZE 2048

Am izolat cpu 1 prin parametrii de la kernel.
Am facut hugepages de 1GB

Strategy_1 se misca ceva mai bine decat Strategy_1_3 mai ales pe pachete UDP.
------------------------------------------------