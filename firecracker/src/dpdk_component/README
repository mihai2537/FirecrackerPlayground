Current status of dpdk_component library crate:
-managed to create a ClientDpdk struct inside the Net struct.
-Removed the CLientDpdk from inside the Net, created it inside a Thread which starts in new_with_tap() from Net struct.
-Starting rte_eal_init from ClientDpdk

-check_proc_type working
-attach_to_rings using rte_ring_lookup working
-attach to mempool using rte_mempool_lookup working
-rte_mempool_get, rte_ring_enqueue_working

-sending the packet from Fc thread to the DPDK thread
-sending empty mbuf from DPDK thread to DPDK primary. [MILESTONE]

-printing some data about the mbuf struct.

-managed to get the packet in the primary DPDK
next step is to check if the format is ok for further sending on internet.

update: as it is right now, if i do rte_eth_tx_burst in primary, the packet is not seen with tcpdump

- after setting fields data_len, pkt_len, nb_segs the packet is seen in tcpdump but not recognized as something useful.

- FIXED the recognition inside tcpdump / wireshark by sending the packet from Guest Memory starting with offset 12.
There seems to be an issue / bug with these 12 starting bytes.
Inter Frame Gap related.

Goal "Send some real packets inside the mbuf to NIC." Achieved.
WARNING: FIND OUT WHY THOSE 12 BYTES ARE BUGGY.



MILESTONE: Able to send empty mbuf from secondary to primary

MILESTONE: Send some real packets inside the mbuf to NIC.

Next Goal: Handle packet reception from primary to secondary.


CURRENT README:

BUILD WITH THIS:

(for quick build)
RUSTFLAGS="-lrte_eal -lrte_mempool -lrte_mbuf -lrte_ring -C target-feature=-crt-static" cargo build --target=x86_64-unknown-linux-gnu


(this one takes too long)
RUSTFLAGS="-lrte_node -lrte_graph -lrte_bpf -lrte_flow_classify -lrte_pipeline -lrte_table -lrte_port -lrte_fib -lrte_ipsec -lrte_vhost -lrte_stack -lrte_security -lrte_sched -lrte_reorder -lrte_rib -lrte_regexdev -lrte_rawdev -lrte_pdump -lrte_power -lrte_member -lrte_lpm -lrte_latencystats -lrte_kni -lrte_jobstats -lrte_ip_frag -lrte_gso -lrte_gro -lrte_eventdev -lrte_efd -lrte_distributor -lrte_cryptodev -lrte_compressdev -lrte_cfgfile -lrte_bitratestats -lrte_bbdev -lrte_acl -lrte_timer -lrte_hash -lrte_metrics -lrte_cmdline -lrte_pci -lrte_ethdev -lrte_meter -lrte_net -lrte_mbuf -lrte_mempool -lrte_rcu -lrte_ring -lrte_eal -lrte_telemetry -lrte_kvargs -C target-feature=-crt-static" cargo build --target=x86_64-unknown-linux-gnu


OLD:

info learned about packets:

there is some thing called Inter Frame Gap which I am handling in a wrong way.
If I get the packet from Guest Memory start with the 12th byte, the packet is
then recognized inside wireshark / tcpdump.

Otherwise there will be 12 bytes more at the starting of the packet which will
be seen as trash by wireshark.



OLD:

info learned about the mbuf:

buf_addr + data_off is where the packet should stay
buf_len is the size of the segment (segment is the place where the packet should be put)
data_len is amount of data in the segment (how many bytes the packet has)

printed info:

2021-04-19T17:37:22.771167727 [anonymous-instance:-] rte_ring_enqueue success
2021-04-19T17:37:23.022076211 [anonymous-instance:main] Sending to another thread, length: 102
2021-04-19T17:37:23.022217091 [anonymous-instance:-] Received the slice!
2021-04-19T17:37:23.022278893 [anonymous-instance:-] Length of received data in thread: 102
2021-04-19T17:37:23.022300126 [anonymous-instance:-] rte_mempool_get success
2021-04-19T17:37:23.022316482 [anonymous-instance:-] Length of segment buffer: 2176
2021-04-19T17:37:23.022332020 [anonymous-instance:-] Data offset: 128
2021-04-19T17:37:23.022347121 [anonymous-instance:-] Address of buf_addr: 0x100846000
2021-04-19T17:37:23.022362612 [anonymous-instance:-] Address of buf_addr + data_off: 0x100846080
2021-04-19T17:37:23.022377878 [anonymous-instance:-] 


OLD:

added -mssse3 inside build.rs for rte_mempool_put to compile


OLD:

Need to create a new bindgen for rte_ring_enqueue():

bindgen --generate-inline-functions include/static-functions.h -o src/bindingsMbuf.rs -- -include rte_config.h -march=native -I/usr/local/include


OLD:
----------------------------------------------------------------------------------------------------------------------------------------
bindgen command:

bindgen --generate-inline-functions include/static-functions.h -o src/bindingsErrno.rs -- -include rte_config.h -march=native -I/usr/local/include

Lesson learned:
- dpdk is going to access different configuration files wheter app is started by root or simple user.
- dpdk app cannot be started without root privileges if you are using IGB_UIO drivers and you are.
- visual studio code ssh cannot use SUDO => you cannot start debugging on an app which is using DPDK.bindgen --generate-inline-functions include/static-functions.h -o src/bindings.rs -- -include rte_config.h -march=native -I/usr/local/include

- overcame this by connecting ssh as ROOT and installing cargo on root.



OLD:
_____________________________________________________________________________________________________________________________________-
Managed to overcome the missing headers by building with this.

Overcame this using the build command mentioned above.
Someone also told me to include the "./include" folder and to remove the path to the include folder from .C file.
Have to try this thing.

OLD:
-----------------------------------------------------------------------------
when using cargo build, I'm getting the following error:
--------------------------------------------------------------------------------


mihai@bobita:~/firecracker/firecracker/src/dpdk_component$ RUSTFLAGS="-lrte_node -lrte_graph -lrte_bpf -lrte_flow_classify -lrte_pipeline -lrte_table -lrte_port -lrte_fib -lrte_ipsec -lrte_vhost -lrte_stack -lrte_security -lrte_sched -lrte_reorder -lrte_rib -lrte_regexdev -lrte_rawdev -lrte_pdump -lrte_power -lrte_member -lrte_lpm -lrte_latencystats -lrte_kni -lrte_jobstats -lrte_ip_frag -lrte_gso -lrte_gro -lrte_eventdev -lrte_efd -lrte_distributor -lrte_cryptodev -lrte_compressdev -lrte_cfgfile -lrte_bitratestats -lrte_bbdev -lrte_acl -lrte_timer -lrte_hash -lrte_metrics -lrte_cmdline -lrte_pci -lrte_ethdev -lrte_meter -lrte_net -lrte_mbuf -lrte_mempool -lrte_rcu -lrte_ring -lrte_eal -lrte_telemetry -lrte_kvargs -C target-feature=-crt-static" cargo build
   Compiling dpdk_component v0.1.0 (/home/mihai/firecracker/firecracker/src/dpdk_component)
The following warnings were emitted during compilation:

warning: In file included from /usr/local/include/rte_ring_core.h:30,
warning:                  from /usr/local/include/rte_ring.h:42,
warning:                  from src/../include/static-functions.h:1,
warning:                  from src/static-functions.c:1:
warning: /usr/include/asm-generic/errno.h:5:10: fatal error: asm-generic/errno-base.h: No such file or directory
warning:     5 | #include <asm-generic/errno-base.h>
warning:       |          ^~~~~~~~~~~~~~~~~~~~~~~~~~
warning: compilation terminated.

error: failed to run custom build command for `dpdk_component v0.1.0 (/home/mihai/firecracker/firecracker/src/dpdk_component)`

Caused by:
  process didn't exit successfully: `/home/mihai/firecracker/firecracker/build/cargo_target/debug/build/dpdk_component-0dce60f3f4441bcd/build-script-build` (exit code: 1)
  --- stdout
  cargo:rerun-if-changed=build.rs
  TARGET = Some("x86_64-unknown-linux-musl")
  OPT_LEVEL = Some("0")
  HOST = Some("x86_64-unknown-linux-gnu")
  CC_x86_64-unknown-linux-musl = None
  CC_x86_64_unknown_linux_musl = None
  TARGET_CC = None
  CC = None
  CROSS_COMPILE = None
  CFLAGS_x86_64-unknown-linux-musl = None
  CFLAGS_x86_64_unknown_linux_musl = None
  TARGET_CFLAGS = None
  CFLAGS = None
  CRATE_CC_NO_DEFAULTS = None
  DEBUG = Some("true")
  CARGO_CFG_TARGET_FEATURE = Some("fxsr,sse,sse2")
  running: "musl-gcc" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-fno-omit-frame-pointer" "-m64" "-Wall" "-Wextra" "-Wno-unused-parameter" "-lrte_ring" "-lrte_mempool" "-lrte_mbuf" "-lrte_node" "-lrte_graph" "-lrte_bpf" "-lrte_flow_classify" "-lrte_pipeline" "-lrte_table" "-lrte_port" "-lrte_fib" "-lrte_ipsec" "-lrte_vhost" "-lrte_stack" "-lrte_security" "-lrte_sched" "-lrte_reorder" "-lrte_rib" "-lrte_regexdev" "-lrte_rawdev" "-lrte_pdump" "-lrte_power" "-lrte_member" "-lrte_lpm" "-lrte_latencystats" "-lrte_kni" "-lrte_jobstats" "-lrte_ip_frag" "-lrte_gso" "-lrte_gro" "-lrte_eventdev" "-lrte_efd" "-lrte_distributor" "-lrte_cryptodev" "-lrte_compressdev" "-lrte_cfgfile" "-lrte_bitratestats" "-lrte_bbdev" "-lrte_acl" "-lrte_timer" "-lrte_hash" "-lrte_metrics" "-lrte_cmdline" "-lrte_pci" "-lrte_ethdev" "-lrte_meter" "-lrte_net" "-lrte_rcu" "-lrte_eal" "-lrte_telemtry" "-lrte_kvargs" "-I/usr/include/asm-generic" "-I/usr/include/linux" "-I/usr/local/include" "-I/usr/include/x86_64-linux-gnu" "-o" "/home/mihai/firecracker/firecracker/build/cargo_target/x86_64-unknown-linux-musl/debug/build/dpdk_component-727022436a195dde/out/src/static-functions.o" "-c" "src/static-functions.c"
  cargo:warning=In file included from /usr/local/include/rte_ring_core.h:30,
  cargo:warning=                 from /usr/local/include/rte_ring.h:42,
  cargo:warning=                 from src/../include/static-functions.h:1,
  cargo:warning=                 from src/static-functions.c:1:
  cargo:warning=/usr/include/asm-generic/errno.h:5:10: fatal error: asm-generic/errno-base.h: No such file or directory
  cargo:warning=    5 | #include <asm-generic/errno-base.h>
  cargo:warning=      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~
  cargo:warning=compilation terminated.
  exit code: 1

  --- stderr


  error occurred: Command "musl-gcc" "-O0" "-ffunction-sections" "-fdata-sections" "-fPIC" "-g" "-fno-omit-frame-pointer" "-m64" "-Wall" "-Wextra" "-Wno-unused-parameter" "-lrte_ring" "-lrte_mempool" "-lrte_mbuf" "-lrte_node" "-lrte_graph" "-lrte_bpf" "-lrte_flow_classify" "-lrte_pipeline" "-lrte_table" "-lrte_port" "-lrte_fib" "-lrte_ipsec" "-lrte_vhost" "-lrte_stack" "-lrte_security" "-lrte_sched" "-lrte_reorder" "-lrte_rib" "-lrte_regexdev" "-lrte_rawdev" "-lrte_pdump" "-lrte_power" "-lrte_member" "-lrte_lpm" "-lrte_latencystats" "-lrte_kni" "-lrte_jobstats" "-lrte_ip_frag" "-lrte_gso" "-lrte_gro" "-lrte_eventdev" "-lrte_efd" "-lrte_distributor" "-lrte_cryptodev" "-lrte_compressdev" "-lrte_cfgfile" "-lrte_bitratestats" "-lrte_bbdev" "-lrte_acl" "-lrte_timer" "-lrte_hash" "-lrte_metrics" "-lrte_cmdline" "-lrte_pci" "-lrte_ethdev" "-lrte_meter" "-lrte_net" "-lrte_rcu" "-lrte_eal" "-lrte_telemtry" "-lrte_kvargs" "-I/usr/include/asm-generic" "-I/usr/include/linux" "-I/usr/local/include" "-I/usr/include/x86_64-linux-gnu" "-o" "/home/mihai/firecracker/firecracker/build/cargo_target/x86_64-unknown-linux-musl/debug/build/dpdk_component-727022436a195dde/out/src/static-functions.o" "-c" "src/static-functions.c" with args "musl-gcc" did not execute successfully (status code exit code: 1).


--------------------------------------------------------------------------------------
OLD README from another package.

trying to get access to rte_mbuf structure.

I got access to rte_ring_dequeue, but not tested yet.
I try to compile my own .c file which wraps the rte_ring_dequeue because it is static inline.

bindgen command:

bindgen --generate-inline-functions include/static-functions.h -o src/bindingsMbuf.rs -- -include rte_config.h -march=native -I/usr/local/include


WARNING:

Something strange happened.
Every time I was trying to eal_init, I got an error.
The error disappeared after starting the dpdk_reader_server serve app.
Some packets were received, which is strange.

Only after running that app, I was able to start other programs to work with eal_init.